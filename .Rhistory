df$FactorQuestion.25.5 <- plyr::revalue(df$FactorQuestion.25.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.6 <- plyr::revalue(df$FactorQuestion.25.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.7 <- plyr::revalue(df$FactorQuestion.25.7, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.8 <- plyr::revalue(df$FactorQuestion.25.8, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.9 <- plyr::revalue(df$FactorQuestion.25.9, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.25.1 <- as.numeric(as.character(df$FactorQuestion.25.1))
df$NumericQuestion.25.2 <- as.numeric(as.character(df$FactorQuestion.25.2))
df$NumericQuestion.25.3 <- as.numeric(as.character(df$FactorQuestion.25.3))
df$NumericQuestion.25.4 <- as.numeric(as.character(df$FactorQuestion.25.4))
df$NumericQuestion.25.5 <- as.numeric(as.character(df$FactorQuestion.25.5))
df$NumericQuestion.25.6 <- as.numeric(as.character(df$FactorQuestion.25.6))
df$NumericQuestion.25.7 <- as.numeric(as.character(df$FactorQuestion.25.7))
df$NumericQuestion.25.8 <- as.numeric(as.character(df$FactorQuestion.25.8))
df$NumericQuestion.25.9 <- as.numeric(as.character(df$FactorQuestion.25.9))
#Recode High Arousal Positive Affect
df$FactorQuestion.26.1 <- as.factor(as.character(df$Question.26.1))
df$FactorQuestion.26.2 <- as.factor(as.character(df$Question.26.2))
df$FactorQuestion.26.3 <- as.factor(as.character(df$Question.26.3))
df$FactorQuestion.26.4 <- as.factor(as.character(df$Question.26.4))
df$FactorQuestion.26.5 <- as.factor(as.character(df$Question.26.5))
df$FactorQuestion.26.6 <- as.factor(as.character(df$Question.26.6))
df$FactorQuestion.26.7 <- as.factor(as.character(df$Question.26.7))
df$FactorQuestion.26.8 <- as.factor(as.character(df$Question.26.8))
df$FactorQuestion.26.9 <- as.factor(as.character(df$Question.26.9))
#recode level 0 to NA
df$FactorQuestion.26.1 <- plyr::revalue(df$FactorQuestion.26.1, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.2 <- plyr::revalue(df$FactorQuestion.26.2, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.3 <- plyr::revalue(df$FactorQuestion.26.3, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.4 <- plyr::revalue(df$FactorQuestion.26.4, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.5 <- plyr::revalue(df$FactorQuestion.26.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.6 <- plyr::revalue(df$FactorQuestion.26.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.7 <- plyr::revalue(df$FactorQuestion.26.7, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.8 <- plyr::revalue(df$FactorQuestion.26.8, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.9 <- plyr::revalue(df$FactorQuestion.26.9, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.26.1 <- as.numeric(as.character(df$FactorQuestion.26.1))
df$NumericQuestion.26.2 <- as.numeric(as.character(df$FactorQuestion.26.2))
df$NumericQuestion.26.3 <- as.numeric(as.character(df$FactorQuestion.26.3))
df$NumericQuestion.26.4 <- as.numeric(as.character(df$FactorQuestion.26.4))
df$NumericQuestion.26.5 <- as.numeric(as.character(df$FactorQuestion.26.5))
df$NumericQuestion.26.6 <- as.numeric(as.character(df$FactorQuestion.26.6))
df$NumericQuestion.26.7 <- as.numeric(as.character(df$FactorQuestion.26.7))
df$NumericQuestion.26.8 <- as.numeric(as.character(df$FactorQuestion.26.8))
df$NumericQuestion.26.9 <- as.numeric(as.character(df$FactorQuestion.26.9))
#create rowmeans (i.e. by participant and by timepoint)
#get column numbers
LowArousalNegativeAffectStart <- match("NumericQuestion.23.1", names(df))
LowArousalNegativeAffectEnd <- match("NumericQuestion.23.7", names(df))
LowArousalPositiveAffectStart <- match("NumericQuestion.24.1", names(df))
LowArousalPositiveAffectEnd <- match("NumericQuestion.24.7", names(df))
HighArousalNegativeAffectStart <- match("NumericQuestion.25.1", names(df))
HighArousalNegativeAffectEnd <- match("NumericQuestion.25.9", names(df))
HighArousalPositiveAffectStart <- match("NumericQuestion.26.1", names(df))
HighArousalPositiveAffectEnd <- match("NumericQuestion.26.9", names(df))
#assign new row mean variable
df$LowArousalNegativeAffectMean <- rowMeans(df[,LowArousalNegativeAffectStart:LowArousalNegativeAffectEnd], na.rm = TRUE)
df$LowArousalPositiveAffectMean <- rowMeans(df[,LowArousalPositiveAffectStart:LowArousalPositiveAffectEnd], na.rm = TRUE)
df$HighArousalNegativeAffectMean <- rowMeans(df[,HighArousalNegativeAffectStart:HighArousalNegativeAffectEnd], na.rm = TRUE)
df$HighArousalPositiveAffectMean <- rowMeans(df[,HighArousalPositiveAffectStart:HighArousalPositiveAffectEnd], na.rm = TRUE)
#Recoding Alone Variable
#Alone should be coded as 1 if Question 3 is Yes and Question 4 is no or Question 3 is No And Question 4 is No. Hence, Question 3 does not matter.
df <- df %>%
mutate(Alone = ifelse(Question.4 == 1, 1, 0))
df$Alone <- as.factor(as.character(df$Alone))
#Calculating a variable that indicates the day.
#Note: They use the American way to denote days.
df <- df %>% tidyr::separate(Ã¯..Start.Date, into = c("Day", "Time"), sep = " ", remove = FALSE)
#Create SubjDay Variable following https://psyarxiv.com/xf2pw/
df$SubjDay <- paste(df$Participant.ID, df$Day, sep = " ")
#Calculate Daylevel Nature
#Question 2, higher score = more nature
#Calculates Mean by Day and Participant.
df <- ddply(df, c('Day', 'Participant.ID'), transform, DayLevelNature = mean(Question.2))
#Calculate DayLevel Intentionality for Solitude
df$FactorQuestion.5 <- as.factor(as.character(df$Question.5))
df$FactorQuestion.5 <- plyr::revalue(df$FactorQuestion.5, c('3' = NA, '1' = '0', '2' = '1'))
df$NumericQuestion.5 <- as.numeric(as.character(df$FactorQuestion.5))
#The warning seems non-sensical after manual re-checking.
#That means, higher score = higher intentionality.
df <- df %>% mutate(NumericQuestion.5.Alone = ifelse(Alone == 1, NumericQuestion.5, NA))
df <- df %>% ddply(c('Day', 'Participant.ID'), transform, DayLevelIntentionalitySolitude = mean(NumericQuestion.5.Alone, na.rm = TRUE))
#reassign dataframe
df3 <- df
#daylevel structure for solitude
df3$FactorQuestion.6 <- as.factor(as.character(df3$Question.6))
df3$FactorQuestion.6 <- plyr::revalue(df3$FactorQuestion.6, c('3' = NA, '1' = '0', '2' = '1'))
df3$NumericQuestion.6 <- as.numeric(as.character(df3$FactorQuestion.6))
#That means, higher score = higher goal / structure.
df3 <- df3 %>% mutate(NumericQuestion.6.Alone = ifelse(Alone == 1, NumericQuestion.6, NA))
df3 <- df3 %>% ddply(c('Day', 'Participant.ID'), transform, DayLevelStructureSolitude= mean(NumericQuestion.6.Alone, na.rm = TRUE))
#########Analysis#########
###Analyses with 50% correct#####
#Exclude all participants with 17 or fewer EMA surveys
#merge dataframes. only include participants with data in both dataframes
#save dataframe for remaining analyses
#write.csv(df7, "Preprocessed Dataframe.csv")
#select only participants with 18 or higher
df_analysis18 <- subset(df3, df3$Surveys.completed >= 18)
#set options
options(contrasts = c("contr.sum", "contr.poly"))
#scale independent continuous variables
df_analysis18$StructureForSolitudeIndividualScaled <- scale(df_analysis18$StructureForSolitudeIndividual)
df_analysis18$DayLevelIntentionalitySolitudeScaled <- scale(df_analysis18$DayLevelIntentionalitySolitude)
df_analysis18$DayLevelNatureScaled <- scale(df_analysis18$DayLevelNature)
df_analysis18$DayLevelStructureSolitudeScaled <- scale(df_analysis18$DayLevelStructureSolitude)
#Calculate p-values
RQ1c_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), data = df_analysis18, type = 3, method = "KR", test_intercept = TRUE, cl = MyCluster)
###High Arousal Positive Affect###
lme18RQ1d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18) #-> converges
#get first summary
summary(lme18RQ1d)
#Calculate p-values
RQ1d_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18, type = 3, method = "KR", test_intercept = TRUE, cl = MyCluster)
RQ1d_p
bookdown::render_book("index.rmd")
bookdown::render_book("index.rmd")
bookdown::render_book("index.rmd")
bookdown::render_book("index.rmd")
bookdown::render_book(index.rmd)
bookdown::render("index.Rmd"
)
bookdown::render("index.Rmd")
bookdown::render_book("index.Rmd")
View(df)
#load data
df <- read.csv(here::here("AnonymousDataframe.csv"))
View(df)
data <- c("", "1", "2")
data[data == ""] <- NA
bookdown::render_book("index.Rmd")
bookdown::render_book("Index.rmd")
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
View(df_analysis18RQ4_person_pvalues)
View(lme18RQ4c.individual)
#-> use "S"
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S",  cl = MyCluster)
lme18RQ4c.individual <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone+StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme18RQ4c.individual)
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#-> use "S"
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S",  cl = MyCluster)
bookdown::render_book("Index.rmd")
View(df_analysis18RQ4_person_pvalues)
lme18RQ4c.individual <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone+StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  || Participant.ID) + (1 || SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, expand_RE = TRUE)) #-> converges, but afex produces negative eigenvalues
lme18RQ4c.individual <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone+StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  || Participant.ID) + (1 || SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), expand_RE = TRUE) #-> converges, but afex produces negative eigenvalues
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  || Participant.ID) + (1 || SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster, expand_RE = TRUE)
Q
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  || Participant.ID) + (1 || SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, expand_RE = TRUE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  || Participant.ID) + (1 || SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, ), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster, expand_re = TRUE)
Q
Q
Q
Q
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone+StructureForSolitudeIndividualScaled  || Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, ), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster, expand_re = TRUE)
lme18RQ4c.individual <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone+StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  || Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges, but afex produces negative eigenvalues
#get first summary
summary(lme18RQ4c.individual)
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  || Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, ), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster, expand_re = TRUE)
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
c
c
c
c
c
c
c
c
c
c
c
c
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
#General Options
options(scipen = 999)
#load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here, plyr, tidyr, dplyr, car, lme4, lattice, parallel, ggplot2, ggpubr, predictmeans)
#create cluster for mixed models. Assumes that you have more than 1 core.
n_cores <- detectCores()
MyCluster <- makeCluster(rep("localhost", n_cores - 1))
#load data
df <- read.csv(here::here("AnonymousDataframe.csv"))
#There are empty cells. I guess these should be NA
df[df==""]<-NA
#####Recoding Variables and Creating Analysis Variables#######
#Recode Low Arousal Negative Affect
df$FactorQuestion.23.1 <- as.factor(as.character(df$Question.23.1))
df$FactorQuestion.23.2 <- as.factor(as.character(df$Question.23.2))
df$FactorQuestion.23.3 <- as.factor(as.character(df$Question.23.3))
df$FactorQuestion.23.4 <- as.factor(as.character(df$Question.23.4))
df$FactorQuestion.23.5 <- as.factor(as.character(df$Question.23.5))
df$FactorQuestion.23.6 <- as.factor(as.character(df$Question.23.6))
df$FactorQuestion.23.7 <- as.factor(as.character(df$Question.23.7))
#recode level 0 to NA
df$FactorQuestion.23.1 <- plyr::revalue(df$FactorQuestion.23.1, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.2 <- plyr::revalue(df$FactorQuestion.23.2, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.3 <- plyr::revalue(df$FactorQuestion.23.3, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.4 <- plyr::revalue(df$FactorQuestion.23.4, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.5 <- plyr::revalue(df$FactorQuestion.23.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.6 <- plyr::revalue(df$FactorQuestion.23.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.23.7 <- plyr::revalue(df$FactorQuestion.23.7, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.23.1 <- as.numeric(as.character(df$FactorQuestion.23.1))
df$NumericQuestion.23.2 <- as.numeric(as.character(df$FactorQuestion.23.2))
df$NumericQuestion.23.3 <- as.numeric(as.character(df$FactorQuestion.23.3))
df$NumericQuestion.23.4 <- as.numeric(as.character(df$FactorQuestion.23.4))
df$NumericQuestion.23.5 <- as.numeric(as.character(df$FactorQuestion.23.5))
df$NumericQuestion.23.6 <- as.numeric(as.character(df$FactorQuestion.23.6))
df$NumericQuestion.23.7 <- as.numeric(as.character(df$FactorQuestion.23.7))
#Recode Low Arousal Positive Affect
df$FactorQuestion.24.1 <- as.factor(as.character(df$Question.24.1))
df$FactorQuestion.24.2 <- as.factor(as.character(df$Question.24.2))
df$FactorQuestion.24.3 <- as.factor(as.character(df$Question.24.3))
df$FactorQuestion.24.4 <- as.factor(as.character(df$Question.24.4))
df$FactorQuestion.24.5 <- as.factor(as.character(df$Question.24.5))
df$FactorQuestion.24.6 <- as.factor(as.character(df$Question.24.6))
df$FactorQuestion.24.7 <- as.factor(as.character(df$Question.24.7))
#recode level 0 to NA
df$FactorQuestion.24.1 <- plyr::revalue(df$FactorQuestion.24.1, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.2 <- plyr::revalue(df$FactorQuestion.24.2, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.3 <- plyr::revalue(df$FactorQuestion.24.3, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.4 <- plyr::revalue(df$FactorQuestion.24.4, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.5 <- plyr::revalue(df$FactorQuestion.24.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.6 <- plyr::revalue(df$FactorQuestion.24.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.24.7 <- plyr::revalue(df$FactorQuestion.24.7, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.24.1 <- as.numeric(as.character(df$FactorQuestion.24.1))
df$NumericQuestion.24.2 <- as.numeric(as.character(df$FactorQuestion.24.2))
df$NumericQuestion.24.3 <- as.numeric(as.character(df$FactorQuestion.24.3))
df$NumericQuestion.24.4 <- as.numeric(as.character(df$FactorQuestion.24.4))
df$NumericQuestion.24.5 <- as.numeric(as.character(df$FactorQuestion.24.5))
df$NumericQuestion.24.6 <- as.numeric(as.character(df$FactorQuestion.24.6))
df$NumericQuestion.24.7 <- as.numeric(as.character(df$FactorQuestion.24.7))
#Recode High Arousal Negative Affect
df$FactorQuestion.25.1 <- as.factor(as.character(df$Question.25.1))
df$FactorQuestion.25.2 <- as.factor(as.character(df$Question.25.2))
df$FactorQuestion.25.3 <- as.factor(as.character(df$Question.25.3))
df$FactorQuestion.25.4 <- as.factor(as.character(df$Question.25.4))
df$FactorQuestion.25.5 <- as.factor(as.character(df$Question.25.5))
df$FactorQuestion.25.6 <- as.factor(as.character(df$Question.25.6))
df$FactorQuestion.25.7 <- as.factor(as.character(df$Question.25.7))
df$FactorQuestion.25.8 <- as.factor(as.character(df$Question.25.8))
df$FactorQuestion.25.9 <- as.factor(as.character(df$Question.25.9))
#recode level 0 to NA
df$FactorQuestion.25.1 <- plyr::revalue(df$FactorQuestion.25.1, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.2 <- plyr::revalue(df$FactorQuestion.25.2, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.3 <- plyr::revalue(df$FactorQuestion.25.3, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.4 <- plyr::revalue(df$FactorQuestion.25.4, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.5 <- plyr::revalue(df$FactorQuestion.25.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.6 <- plyr::revalue(df$FactorQuestion.25.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.7 <- plyr::revalue(df$FactorQuestion.25.7, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.8 <- plyr::revalue(df$FactorQuestion.25.8, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.25.9 <- plyr::revalue(df$FactorQuestion.25.9, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.25.1 <- as.numeric(as.character(df$FactorQuestion.25.1))
df$NumericQuestion.25.2 <- as.numeric(as.character(df$FactorQuestion.25.2))
df$NumericQuestion.25.3 <- as.numeric(as.character(df$FactorQuestion.25.3))
df$NumericQuestion.25.4 <- as.numeric(as.character(df$FactorQuestion.25.4))
df$NumericQuestion.25.5 <- as.numeric(as.character(df$FactorQuestion.25.5))
df$NumericQuestion.25.6 <- as.numeric(as.character(df$FactorQuestion.25.6))
df$NumericQuestion.25.7 <- as.numeric(as.character(df$FactorQuestion.25.7))
df$NumericQuestion.25.8 <- as.numeric(as.character(df$FactorQuestion.25.8))
df$NumericQuestion.25.9 <- as.numeric(as.character(df$FactorQuestion.25.9))
#Recode High Arousal Positive Affect
df$FactorQuestion.26.1 <- as.factor(as.character(df$Question.26.1))
df$FactorQuestion.26.2 <- as.factor(as.character(df$Question.26.2))
df$FactorQuestion.26.3 <- as.factor(as.character(df$Question.26.3))
df$FactorQuestion.26.4 <- as.factor(as.character(df$Question.26.4))
df$FactorQuestion.26.5 <- as.factor(as.character(df$Question.26.5))
df$FactorQuestion.26.6 <- as.factor(as.character(df$Question.26.6))
df$FactorQuestion.26.7 <- as.factor(as.character(df$Question.26.7))
df$FactorQuestion.26.8 <- as.factor(as.character(df$Question.26.8))
df$FactorQuestion.26.9 <- as.factor(as.character(df$Question.26.9))
#recode level 0 to NA
df$FactorQuestion.26.1 <- plyr::revalue(df$FactorQuestion.26.1, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.2 <- plyr::revalue(df$FactorQuestion.26.2, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.3 <- plyr::revalue(df$FactorQuestion.26.3, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.4 <- plyr::revalue(df$FactorQuestion.26.4, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.5 <- plyr::revalue(df$FactorQuestion.26.5, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.6 <- plyr::revalue(df$FactorQuestion.26.6, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.7 <- plyr::revalue(df$FactorQuestion.26.7, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.8 <- plyr::revalue(df$FactorQuestion.26.8, c('0' = NA, '1' = '0', '2' = '1'))
df$FactorQuestion.26.9 <- plyr::revalue(df$FactorQuestion.26.9, c('0' = NA, '1' = '0', '2' = '1'))
#recode back to a numeric so we can make a mean
df$NumericQuestion.26.1 <- as.numeric(as.character(df$FactorQuestion.26.1))
df$NumericQuestion.26.2 <- as.numeric(as.character(df$FactorQuestion.26.2))
df$NumericQuestion.26.3 <- as.numeric(as.character(df$FactorQuestion.26.3))
df$NumericQuestion.26.4 <- as.numeric(as.character(df$FactorQuestion.26.4))
df$NumericQuestion.26.5 <- as.numeric(as.character(df$FactorQuestion.26.5))
df$NumericQuestion.26.6 <- as.numeric(as.character(df$FactorQuestion.26.6))
df$NumericQuestion.26.7 <- as.numeric(as.character(df$FactorQuestion.26.7))
df$NumericQuestion.26.8 <- as.numeric(as.character(df$FactorQuestion.26.8))
df$NumericQuestion.26.9 <- as.numeric(as.character(df$FactorQuestion.26.9))
#create rowmeans (i.e. by participant and by timepoint)
#get column numbers
LowArousalNegativeAffectStart <- match("NumericQuestion.23.1", names(df))
LowArousalNegativeAffectEnd <- match("NumericQuestion.23.7", names(df))
LowArousalPositiveAffectStart <- match("NumericQuestion.24.1", names(df))
LowArousalPositiveAffectEnd <- match("NumericQuestion.24.7", names(df))
HighArousalNegativeAffectStart <- match("NumericQuestion.25.1", names(df))
HighArousalNegativeAffectEnd <- match("NumericQuestion.25.9", names(df))
HighArousalPositiveAffectStart <- match("NumericQuestion.26.1", names(df))
HighArousalPositiveAffectEnd <- match("NumericQuestion.26.9", names(df))
#assign new row mean variable
df$LowArousalNegativeAffectMean <- rowMeans(df[,LowArousalNegativeAffectStart:LowArousalNegativeAffectEnd], na.rm = TRUE)
df$LowArousalPositiveAffectMean <- rowMeans(df[,LowArousalPositiveAffectStart:LowArousalPositiveAffectEnd], na.rm = TRUE)
df$HighArousalNegativeAffectMean <- rowMeans(df[,HighArousalNegativeAffectStart:HighArousalNegativeAffectEnd], na.rm = TRUE)
df$HighArousalPositiveAffectMean <- rowMeans(df[,HighArousalPositiveAffectStart:HighArousalPositiveAffectEnd], na.rm = TRUE)
#Recoding Alone Variable
#Alone should be coded as 1 if Question 3 is Yes and Question 4 is no or Question 3 is No And Question 4 is No. Hence, Question 3 does not matter.
df <- df %>%
mutate(Alone = ifelse(Question.4 == 1, 1, 0))
df$Alone <- as.factor(as.character(df$Alone))
#Calculating a variable that indicates the day.
#Note: They use the American way to denote days.
df <- df %>% tidyr::separate(Ã¯..Start.Date, into = c("Day", "Time"), sep = " ", remove = FALSE)
#Create SubjDay Variable following https://psyarxiv.com/xf2pw/
df$SubjDay <- paste(df$Participant.ID, df$Day, sep = " ")
#Calculate Daylevel Nature
#Question 2, higher score = more nature
#Calculates Mean by Day and Participant.
df <- ddply(df, c('Day', 'Participant.ID'), transform, DayLevelNature = mean(Question.2))
#Calculate DayLevel Intentionality for Solitude
df$FactorQuestion.5 <- as.factor(as.character(df$Question.5))
df$FactorQuestion.5 <- plyr::revalue(df$FactorQuestion.5, c('3' = NA, '1' = '0', '2' = '1'))
df$NumericQuestion.5 <- as.numeric(as.character(df$FactorQuestion.5))
df <- df %>% mutate(NumericQuestion.5.Alone = ifelse(Alone == 1, NumericQuestion.5, NA))
df <- df %>% ddply(c('Day', 'Participant.ID'), transform, DayLevelIntentionalitySolitude = mean(NumericQuestion.5.Alone, na.rm = TRUE))
#reassign dataframe
df3 <- df
#daylevel structure for solitude
df3$FactorQuestion.6 <- as.factor(as.character(df3$Question.6))
df3$FactorQuestion.6 <- plyr::revalue(df3$FactorQuestion.6, c('3' = NA, '1' = '0', '2' = '1'))
df3$NumericQuestion.6 <- as.numeric(as.character(df3$FactorQuestion.6))
df3 <- df3 %>% mutate(NumericQuestion.6.Alone = ifelse(Alone == 1, NumericQuestion.6, NA))
df3 <- df3 %>% ddply(c('Day', 'Participant.ID'), transform, DayLevelStructureSolitude= mean(NumericQuestion.6.Alone, na.rm = TRUE))
#select only participants with 18 or higher
df_analysis18 <- subset(df3, df3$Surveys.completed >= 18)
#set options
options(contrasts = c("contr.sum", "contr.poly"))
#scale independent continuous variables
df_analysis18$StructureForSolitudeIndividualScaled <- scale(df_analysis18$StructureForSolitudeIndividual)
df_analysis18$DayLevelIntentionalitySolitudeScaled <- scale(df_analysis18$DayLevelIntentionalitySolitude)
df_analysis18$DayLevelNatureScaled <- scale(df_analysis18$DayLevelNature)
df_analysis18$DayLevelStructureSolitudeScaled <- scale(df_analysis18$DayLevelStructureSolitude)
summary(df)
summary(df_analysis18$DayLevelStructureSolitude)
summary(df_analysis18$DayLevelStructureSolitude)
summary(df_analysis18$Alone)
summary(df_analysis18$DayLevelStructureSolitude)
bookdown::render_book("Index.rmd")
Q
Q
Q
Q
Q
bookdown::render_book("Index.rmd")
View(df_analysis18)
summary(df_analysis18$Question.2)
bookdown::render_book("Index.rmd")
renv::init()
Q
Q
Q
Q
View(converges)
renv::init()
Q
Q
Q
Q
Q
Q
Q
Q
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here, plyr, tidyr, dplyr, car, lme4, lattice, parallel, ggplot2, ggpubr, predictmeans, rmarkdown, tinytex, renv)
renv::init()
renv::snapshot()
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")

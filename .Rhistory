#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ4.individual , scaled = TRUE)) > 2) / length(resid(lme21RQ4.individual ))
sum(abs(resid(lme21RQ4.individual , scaled = TRUE)) > 2.5) / length(resid(lme21RQ4.individual ))
sum(abs(resid(lme21RQ4.individual , scaled = TRUE)) > 3) / length(resid(lme21RQ4.individual ))
#2) Homoscedasticity
plot(lme21RQ4.individual, type = c('p', 'smooth'))
#looks violated
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ4.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ4.individual, scaled = TRUE))
#qqplot shows quite some outliers in the tails
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
#RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': Lapackroutine dgesv: System ist genau singulär: U[12,12] = 0
RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S", cl = MyCluster)
#Hypothesis 4Ad individual not supported, 4Bc/d: No Interaction
RQ4.individual_p
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
Q
Q
Q
lme21RQ4.day <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*DayLevelStructureSolitudeScaled + (1 + Alone*DayLevelStructureSolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis21)
#get first summary
summary(lme21RQ4.day)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ4.day , scaled = TRUE)) > 2) / length(resid(lme21RQ4.day ))
sum(abs(resid(lme21RQ4.day , scaled = TRUE)) > 2.5) / length(resid(lme21RQ4.day ))
sum(abs(resid(lme21RQ4.day , scaled = TRUE)) > 3) / length(resid(lme21RQ4.day ))
#2) Homoscedasticity
plot(lme21RQ4.day, type = c('p', 'smooth'))
#looks violated
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ4.day, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ4.day, scaled = TRUE))
#qqplot shows quite some outliers in the tails
RQ4.day_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*DayLevelStructureSolitudeScaled + (1 + Alone*DayLevelStructureSolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis21,  type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Hypothesis 4Ad day not supported, 4Bc/d: No Interaction
RQ4.day_p
bookdown::render_book("Index.rmd")
Q
Q
Q
bookdown::render_book("Index.rmd")
lme18RQ1c <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18)
#get first summary
summary(lme18RQ1c)
RQ1c_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18, type = 3, method = "KR", test_intercept = TRUE, cl = MyCluster)
RQ1c_p
lme18RQ1b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18)
#get first summary
summary(lme18RQ1b)
#Calculate p-values
RQ1b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone + (1 + Alone | Participant.ID) + (1 | SubjDay), data = df_analysis18, type = 3, method = "KR", test_intercept = TRUE, cl = MyCluster)
#Effect of Alone is significant
RQ1b_p
#get means
df_analysis18_2 <- df_analysis18 %>% select(LowArousalNegativeAffectMean, LowArousalPositiveAffectMean, HighArousalNegativeAffectMean, HighArousalPositiveAffectMean, Alone)
#estimate is positive, mean is lower for alone == 1, hence people have higher levels of lowarousalpositive affect when they are among people
by(df_analysis18_2,df_analysis18_2$Alone, summary)
#check contrasts to verify results
contrasts(df_analysis18$Alone)
#Alone = -1, People = 1,
#Positive Fixed Effect, hence it fits with the means.
#Hypothesis 1C not confirmed, effect in the opposite direction.
#Check if analyses still significant after correction
df_analysis18RQ1_pvalues <- as.data.frame(rbind(RQ1_p$anova_table$`Pr(>F)`, RQ1b_p$anova_table$`Pr(>F)`, RQ1c_p$anova_table$`Pr(>F)`, RQ1d_p$anova_table$`Pr(>F)`))
df_analysis18RQ1_pvalues$adjusted <- p.adjust(df_analysis18RQ1_pvalues$V2, method = "holm")
#only model 4 remains significant, hence 1A is also confirmed after correction, whereas the effect in the opposite direction at 1C disappears.
df_analysis18RQ1_pvalues$adjusted
RQ2d_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2d_p
#2Aa not supported. "Support" for 2Bc/d because we predicted no effect and there is no effect
#Significant effect of Alone
RQ2b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2b_p
#2Ac and 2Ba not supported
RQ3b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone*DayLevelIntentionalitySolitudeScaled + (1 + Alone*DayLevelIntentionalitySolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#3Ac and 3Ba not supported
RQ3b_p
RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': System ist für den Rechner singulär: reziproke Konditionszahl = 3.16421e-35
RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S", cl = MyCluster)
RQ4d.individual_p
#Hypothesis 4Aa and 4Ba not suported
#Higher Levels in Social than Alone condition.
HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': Lapackroutine dgesv: System ist genau singulär: U[12,12] = 0
RQ4c.individual_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S",  cl = MyCluster)
#Hypothesis 4Ab individual not supported, 4Bb There is an interaction
RQ4c.individual_p
RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': System ist für den Rechner singulär: reziproke Konditionszahl = 1.36756e-33
RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis18, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S", cl = MyCluster)
#Hypothesis 4Ad individual not supported, 4Bc/d: No Interaction
RQ4.individual_p
#Check if analyses still significant after correction
df_analysis18RQ4_person_pvalues <- as.data.frame(rbind(RQ4.individual_p$anova_table$`Pr(>F)`[3], RQ4b.individual_p$anova_table$`Pr(>F)`[3], RQ4c.individual_p$anova_table$`Pr(>F)`[3], RQ4d.individual_p$anova_table$`Pr(>F)`[3]))
df_analysis18RQ4_person_pvalues$adjusted <- p.adjust(df_analysis18RQ4_person_pvalues$V1, method = "holm")
df_analysis18RQ4_person_pvalues$adjusted
lme14RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme14RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme14RQ2b)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ2b , scaled = TRUE)) > 2) / length(resid(lme14RQ2b ))
sum(abs(resid(lme14RQ2b , scaled = TRUE)) > 2.5) / length(resid(lme14RQ2b ))
sum(abs(resid(lme14RQ2b , scaled = TRUE)) > 3) / length(resid(lme14RQ2b ))
#2) Homoscedasticity
plot(lme14RQ2b, type = c('p', 'smooth'))
#looks mostly fine
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ2b, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ2b, scaled = TRUE))
#Normal enough, but the qqplot shows quite some outliers in the tails
RQ2b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2b_p
#2Ac amd 2Ba not supported
lme14RQ3b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelIntentionalitySolitudeScaled + (1 + Alone*DayLevelIntentionalitySolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ3b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelIntentionalitySolitudeScaled + (1 + Alone*DayLevelIntentionalitySolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme14RQ3b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelIntentionalitySolitudeScaled + (1 + Alone*DayLevelIntentionalitySolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE))
#get first summary
summary(lme14RQ3b)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ3b , scaled = TRUE)) > 2) / length(resid(lme14RQ3b ))
sum(abs(resid(lme14RQ3b , scaled = TRUE)) > 2.5) / length(resid(lme14RQ3b ))
sum(abs(resid(lme14RQ3b , scaled = TRUE)) > 3) / length(resid(lme14RQ3b ))
#2) Homoscedasticity
plot(lme14RQ3b, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ3b, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ3b, scaled = TRUE))
#qqplot shows some outliers in the tails
RQ3b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone*DayLevelIntentionalitySolitudeScaled + (1 + Alone*DayLevelIntentionalitySolitudeScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#3Ac and 3Ba not supported
RQ3b_p
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE))
#get first summary
summary(lme14RQ4d.individual)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2.5) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 3) / length(resid(lme14RQ4d.individual ))
#2) Homoscedasticity
plot(lme14RQ4d.individual, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot shows outliers in the tails
RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster, expand_re = TRUE)
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE))
#get first summary
summary(lme14RQ4d.individual)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2.5) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 3) / length(resid(lme14RQ4d.individual ))
#2) Homoscedasticity
plot(lme14RQ4d.individual, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot shows outliers in the tails
RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ4d.individual <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE))
#get first summary
summary(lme14RQ4d.individual)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 2.5) / length(resid(lme14RQ4d.individual ))
sum(abs(resid(lme14RQ4d.individual , scaled = TRUE)) > 3) / length(resid(lme14RQ4d.individual ))
#2) Homoscedasticity
plot(lme14RQ4d.individual, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ4d.individual, scaled = TRUE))
#qqplot shows outliers in the tails
#RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': Lapackroutine dgesv: System ist genau singulär: U[12,12] = 0
RQ4d.individual_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S",  cl = MyCluster)
RQ4d.individual_p
#Hypothesis 4Aa and 4Ba not suported
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme14RQ4.individual)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 2) / length(resid(lme14RQ4.individual ))
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 2.5) / length(resid(lme14RQ4.individual ))
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 3) / length(resid(lme14RQ4.individual ))
#2) Homoscedasticity
plot(lme14RQ4.individual, type = c('p', 'smooth'))
#looks violated
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ4.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ4.individual, scaled = TRUE))
#qqplot shows quite some outliers in the tails
RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ4.individual <- lme4::lmer(LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme14RQ4.individual)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 2) / length(resid(lme14RQ4.individual ))
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 2.5) / length(resid(lme14RQ4.individual ))
sum(abs(resid(lme14RQ4.individual , scaled = TRUE)) > 3) / length(resid(lme14RQ4.individual ))
#2) Homoscedasticity
plot(lme14RQ4.individual, type = c('p', 'smooth'))
#looks violated
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ4.individual, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ4.individual, scaled = TRUE))
#qqplot shows quite some outliers in the tails
#RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
#Fehler in h(simpleError(msg, call)) : Fehler bei der Auswertung des Argumentes 'x' bei der Methodenauswahl für Funktion 'forceSymmetric': System ist für den Rechner singulär: reziproke Konditionszahl = 3.86022e-33
RQ4.individual_p <- afex::mixed (LowArousalNegativeAffectMean ~ Alone*StructureForSolitudeIndividualScaled + (1 + Alone*StructureForSolitudeIndividualScaled  | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "S",  cl = MyCluster)
RQ4.individual_p
df_analysis18RQ4_person_pvalues <- as.data.frame(rbind(RQ4.individual_p$anova_table$`Pr(>F)`[3], RQ4b.individual_p$anova_table$`Pr(>F)`[4], RQ4c.individual_p$anova_table$`Pr(>F)`[3], RQ4d.individual_p$anova_table$`Pr(>F)`[3]))
df_analysis18RQ4_person_pvalues$adjusted <- p.adjust(df_analysis18RQ4_person_pvalues$V1, method = "holm")
df_analysis18RQ4_person_pvalues <- as.data.frame(rbind(RQ4.individual_p$anova_table$`Pr(>F)`[3], RQ4b.individual_p$anova_table$`Pr(>F)`[4], RQ4c.individual_p$anova_table$`Pr(>F)`[3], RQ4d.individual_p$anova_table$`Pr(>F)`[3]))
df_analysis18RQ4_person_pvalues$adjusted <- p.adjust(df_analysis18RQ4_person_pvalues$V1, method = "holm")
df_analysis18RQ4_person_pvalues$adjusted
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21) #-> does not convergence
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme21RQ2d)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 2) / length(resid(lme21RQ2d ))
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 2.5) / length(resid(lme21RQ2d ))
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 3) / length(resid(lme21RQ2d ))
#2) Homoscedasticity
plot(lme21RQ2d, type = c('p', 'smooth'))
#looks mostly fine
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ2d, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ2d, scaled = TRUE))
#qqplot shows quite some outliers in the tails
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ2d_p <- afex::mixed (HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster
RQ2d_p
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21) #-> does not convergence
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme21RQ2d <- lme4::lmer(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme21RQ2d)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 2) / length(resid(lme21RQ2d ))
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 2.5) / length(resid(lme21RQ2d ))
sum(abs(resid(lme21RQ2d , scaled = TRUE)) > 3) / length(resid(lme21RQ2d ))
#2) Homoscedasticity
plot(lme21RQ2d, type = c('p', 'smooth'))
#looks mostly fine
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ2d, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ2d, scaled = TRUE))
#qqplot shows quite some outliers in the tails
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ2d_p <- afex::mixed(HighArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2d_p
#2Aa not supported. "Support" for 2Bc/d because we predicted no effect and there is no effect
#Significant effect of Alone
lme21RQ2c <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21) #-> does not convergence
lme21RQ2c <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme21RQ2c <- lme4::lmer(HighArousalNegativeAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
summary(lme21RQ2c)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ2c , scaled = TRUE)) > 2) / length(resid(lme21RQ2c ))
sum(abs(resid(lme21RQ2c , scaled = TRUE)) > 2.5) / length(resid(lme21RQ2c ))
sum(abs(resid(lme21RQ2c , scaled = TRUE)) > 3) / length(resid(lme21RQ2c ))
#2) Homoscedasticity
plot(lme21RQ2c, type = c('p', 'smooth'))
#looks mostly fine
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ2c, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ2c, scaled = TRUE))
#Barely Normal and the qqplot shows quite some outliers in the tails
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ2c_p <- afex::mixed (HighArousalNegativeAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2c_p
#2Ab not supported. 2Bc/d "supported", as in we did not predict an effect and we did not observe an effect
lme21RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21) #-> does not convergence
lme21RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa")) #does not convergence
lme21RQ2b <- lme4::lmer(LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE)) #-> converges
#get first summary
summary(lme21RQ2b)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme21RQ2b , scaled = TRUE)) > 2) / length(resid(lme21RQ2b ))
sum(abs(resid(lme21RQ2b , scaled = TRUE)) > 2.5) / length(resid(lme21RQ2b ))
sum(abs(resid(lme21RQ2b , scaled = TRUE)) > 3) / length(resid(lme21RQ2b ))
#2) Homoscedasticity
plot(lme21RQ2b, type = c('p', 'smooth'))
#looks mostly fine
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme21RQ2b, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme21RQ2b, scaled = TRUE))
#Normal enough, but the qqplot shows quite some outliers in the tails
#Calculate p-values
#says the predictor is not centered on zero, but like 15 digits after the comma are 0s
RQ2b_p <- afex::mixed (LowArousalPositiveAffectMean ~ Alone*DayLevelNatureScaled + (1 + Alone*DayLevelNatureScaled | Participant.ID) + (1 | SubjDay), data = df_analysis21, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ2b_p
#2Ac and 2Ba not supported
bookdown::render_book("Index.rmd")
bookdown::render_book("Index.rmd")
#create lagged alone variable as preparation for creating the epoch variable
df_analysis14 <-
df_analysis14 %>%
group_by(Participant.ID) %>%
mutate(AloneLagged = dplyr::lag(Alone, n = 1, default = NA))
#create epoch. epoch = 1 if alone & alone lagged are not equal and not NA.
df_analysis14 <-
df_analysis14 %>%
mutate(epoch = ifelse(Alone == 1 & AloneLagged == 0 | Alone == 0 & AloneLagged == 1, 1, 0))
df_analysis14$epoch <- as.factor(as.character(df_analysis14$epoch))
#create affect.0 variables, which are the lagged versions of the affect variables.
df_analysis14 <-
df_analysis14 %>%
group_by(Participant.ID) %>%
mutate(LowArousalNegativeAffectMeanLagged = dplyr::lag(LowArousalNegativeAffectMean, n = 1, default = NA))
df_analysis14 <-
df_analysis14 %>%
group_by(Participant.ID) %>%
mutate(LowArousalPositiveAffectMeanLagged = dplyr::lag(LowArousalPositiveAffectMean, n = 1, default = NA))
df_analysis14 <-
df_analysis14 %>%
group_by(Participant.ID) %>%
mutate(HighArousalNegativeAffectMeanLagged = dplyr::lag(HighArousalNegativeAffectMean, n = 1, default = NA))
df_analysis14 <-
df_analysis14 %>%
group_by(Participant.ID) %>%
mutate(HighArousalPositiveAffectMeanLagged = dplyr::lag(HighArousalPositiveAffectMean, n = 1, default = NA))
#scale the lagged variable as predictor
df_analysis14$LowArousalNegativeAffectMeanLaggedScaled <- scale(df_analysis14$LowArousalNegativeAffectMeanLagged)
df_analysis14$LowArousalPositiveAffectMeanLaggedScaled <- scale(df_analysis14$LowArousalPositiveAffectMeanLagged)
df_analysis14$HighArousalNegativeAffectMeanLaggedScaled <- scale(df_analysis14$HighArousalNegativeAffectMeanLagged)
df_analysis14$HighArousalPositiveAffectMeanLaggedScaled <- scale(df_analysis14$HighArousalPositiveAffectMeanLagged)
#####fit mixed model#####
##LowArousalNegative Affect##
lme14RQ5 <- lme4::lmer(LowArousalNegativeAffectMean ~ LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ5 <- lme4::lmer(LowArousalNegativeAffectMean ~ LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) # does not converge
lme14RQ5 <- lme4::lmer(LowArousalNegativeAffectMean ~ LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)))
#get first summary
summary(lme14RQ5)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ5 , scaled = TRUE)) > 2) / length(resid(lme14RQ5 ))
sum(abs(resid(lme14RQ5 , scaled = TRUE)) > 2.5) / length(resid(lme14RQ5 ))
sum(abs(resid(lme14RQ5 , scaled = TRUE)) > 3) / length(resid(lme14RQ5 ))
#2) Homoscedasticity
plot(lme14RQ5, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ5, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ5, scaled = TRUE))
#qqplot shows outliers in the tails
#Conclusion: There are some issues with the assumptions here. Proceed with caution.
#Calculate p-values
#says the predictor is not centered on zero
RQ5_p <- afex::mixed (LowArousalNegativeAffectMean ~ LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ5_p
##low arousal positive affect##
#####fit mixed model#####
lme14RQ5b <- lme4::lmer(LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ5b <- lme4::lmer(LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ5b <- lme4::lmer(LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)))
#get first summary
summary(lme14RQ5b)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ5b , scaled = TRUE)) > 2) / length(resid(lme14RQ5b ))
sum(abs(resid(lme14RQ5b , scaled = TRUE)) > 2.5) / length(resid(lme14RQ5b ))
sum(abs(resid(lme14RQ5b , scaled = TRUE)) > 3) / length(resid(lme14RQ5b ))
#2) Homoscedasticity
plot(lme14RQ5b, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ5b, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ5b, scaled = TRUE))
#qqplot shows outliers in the tails
#Conclusion: There are some issues with the assumptions here. Proceed with caution.
#Calculate p-values
RQ5b_p <- afex::mixed (LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ5b_p
##high arousal negative affect##
#####fit mixed model#####
lme14RQ5c <- lme4::lmer(HighArousalNegativeAffectMean ~ HighArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ5c <- lme4::lmer(HighArousalNegativeAffectMean ~ HighArousalNegativeAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalNegativeAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ5c <- lme4::lmer(LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)))
#get first summary
summary(lme14RQ5c)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ5c , scaled = TRUE)) > 2) / length(resid(lme14RQ5c ))
sum(abs(resid(lme14RQ5c , scaled = TRUE)) > 2.5) / length(resid(lme14RQ5c ))
sum(abs(resid(lme14RQ5c , scaled = TRUE)) > 3) / length(resid(lme14RQ5c ))
#2) Homoscedasticity
plot(lme14RQ5c, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ5c, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ5c, scaled = TRUE))
#qqplot shows outliers in the tails
#Conclusion: There are some issues with the assumptions here. Proceed with caution.
#Calculate p-values
RQ5c_p <- afex::mixed(LowArousalPositiveAffectMean ~ LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +LowArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ5c_p
##high arousal positive affect##
#####fit mixed model#####
lme14RQ5d <- lme4::lmer(HighArousalPositiveAffectMean ~ HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14) #-> does not convergence
lme14RQ5d <- lme4::lmer(HighArousalPositiveAffectMean ~ HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa")) #-> does not convergence
lme14RQ5d <- lme4::lmer(HighArousalPositiveAffectMean ~ HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)))
#get first summary
summary(lme14RQ5d)
#check assumptions
#1) Outliers
#proportion of residuals larger than +/- 2, 2.5, 3.
sum(abs(resid(lme14RQ5d , scaled = TRUE)) > 2) / length(resid(lme14RQ5d ))
sum(abs(resid(lme14RQ5d , scaled = TRUE)) > 2.5) / length(resid(lme14RQ5d ))
sum(abs(resid(lme14RQ5d , scaled = TRUE)) > 3) / length(resid(lme14RQ5d ))
#2) Homoscedasticity
plot(lme14RQ5d, type = c('p', 'smooth'))
#looks good
#3) Normality
#densityplot of the scaled residuals
densityplot(resid(lme14RQ5d, scaled = TRUE))
#qqplot of the scaled residuals
car::qqPlot(resid(lme14RQ5d, scaled = TRUE))
#qqplot shows outliers in the tails
#Conclusion: There are some issues with the assumptions here. Proceed with caution.
#Calculate p-values
RQ5d_p <- afex::mixed(HighArousalPositiveAffectMean ~ HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch + (1 +HighArousalPositiveAffectMeanLaggedScaled*Alone*epoch | Participant.ID) + (1 | SubjDay), data = df_analysis14, control = lmerControl(optimizer = "bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=1e5)), type = 3, method = "KR",test_intercept = TRUE,  cl = MyCluster)
RQ5d_p
